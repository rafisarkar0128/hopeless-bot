import { DiscordBot } from "@lib/DiscordBot";

// discordjs event names
export type DiscordEvents =
  | "applicationCommandPermissionsUpdate"
  | "autoModerationActionExecution"
  | "autoModerationRuleCreate"
  | "autoModerationRuleDelete"
  | "autoModerationRuleUpdate"
  | "cacheSweep"
  | "channelCreate"
  | "channelDelete"
  | "channelPinsUpdate"
  | "channelUpdate"
  | "debug"
  | "entitlementCreate"
  | "entitlementDelete"
  | "entitlementUpdate"
  | "emojiCreate"
  | "emojiDelete"
  | "emojiUpdate"
  | "error"
  | "guildAuditLogEntryCreate"
  | "guildAvailable"
  | "guildBanAdd"
  | "guildBanRemove"
  | "guildCreate"
  | "guildDelete"
  | "guildIntegrationsUpdate"
  | "guildMemberAdd"
  | "guildMemberAvailable"
  | "guildMemberRemove"
  | "guildMembersChunk"
  | "guildMemberUpdate"
  | "guildScheduledEventCreate"
  | "guildScheduledEventDelete"
  | "guildScheduledEventUpdate"
  | "guildScheduledEventUserAdd"
  | "guildScheduledEventUserRemove"
  | "guildUnavailable"
  | "guildUpdate"
  | "interactionCreate"
  | "invalidated"
  | "inviteCreate"
  | "inviteDelete"
  | "messageCreate"
  | "messageDelete"
  | "messageDeleteBulk"
  | "messageReactionAdd"
  | "messageReactionRemove"
  | "messageReactionRemoveAll"
  | "messageReactionRemoveEmoji"
  | "messageUpdate"
  | "presenceUpdate"
  | "raw"
  | "ready"
  | "roleCreate"
  | "roleDelete"
  | "roleUpdate"
  | "shardDisconnect"
  | "shardError"
  | "shardReady"
  | "shardReconnecting"
  | "shardResume"
  | "stageInstanceCreate"
  | "stageInstanceDelete"
  | "stageInstanceUpdate"
  | "stickerCreate"
  | "stickerDelete"
  | "stickerUpdate"
  | "threadCreate"
  | "threadDelete"
  | "threadListSync"
  | "threadMembersUpdate"
  | "threadMemberUpdate"
  | "threadUpdate"
  | "typingStart"
  | "userUpdate"
  | "voiceServerUpdate"
  | "voiceStateUpdate"
  | "warn"
  | "webhooksUpdate"
  | "webhookUpdate";

// riffy event names
export type RiffyEventNames =
  | "nodeCreate"
  | "nodeDisconnect"
  | "nodeReconnect"
  | "nodeError"
  | "trackStart"
  | "trackEnd"
  | "trackError"
  | "trackStuck"
  | "socketClosed"
  | "playerCreate"
  | "playerDisconnect"
  | "playerMove"
  | "playerUpdate"
  | "queueEnd"
  | "debug";

// event module structure
export interface EventStructure {
  name: DiscordEvents | RiffyEventNames;
  once?: boolean;
  rest?: boolean;
  ws?: boolean;
  riffy?: boolean;
  execute: (client: DiscordBot, ...args: any) => Promise<any>;
}
